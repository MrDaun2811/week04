/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package week04;
import week_02.DESCipher;
import javax.swing.*;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author levan
 */
public class frm_DESCS extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public frm_DESCS() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txt_plaintext = new javax.swing.JTextField();
        txt_key = new javax.swing.JTextField();
        txt_ciphertext = new javax.swing.JTextField();
        btn_open_alice_key = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        bnt_open_bob_key = new javax.swing.JButton();
        btn_encrypt = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        btn_decrypt = new javax.swing.JButton();
        btn_save_to_file = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        btn_open_file = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btn_open_alice_key.setText("open alice's key");
        btn_open_alice_key.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_open_alice_keyActionPerformed(evt);
            }
        });

        jLabel1.setText("DES Cipher Demo ( D-H)");

        bnt_open_bob_key.setText("open bob's key");
        bnt_open_bob_key.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bnt_open_bob_keyActionPerformed(evt);
            }
        });

        btn_encrypt.setText("encrypt");
        btn_encrypt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_encryptActionPerformed(evt);
            }
        });

        jLabel3.setText("plaintext");

        btn_decrypt.setText("decrypt");
        btn_decrypt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_decryptActionPerformed(evt);
            }
        });

        btn_save_to_file.setText("save to file");
        btn_save_to_file.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_save_to_fileActionPerformed(evt);
            }
        });

        jLabel5.setText("key");

        btn_open_file.setText("open file");
        btn_open_file.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_open_fileActionPerformed(evt);
            }
        });

        jLabel6.setText("ciphertext");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(231, 231, 231)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(jLabel5))
                            .addComponent(btn_encrypt))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txt_plaintext, javax.swing.GroupLayout.PREFERRED_SIZE, 416, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(txt_ciphertext, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 408, Short.MAX_VALUE)
                                        .addComponent(txt_key, javax.swing.GroupLayout.Alignment.LEADING))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(71, 71, 71)
                                .addComponent(btn_decrypt)
                                .addGap(74, 74, 74)
                                .addComponent(btn_save_to_file)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 191, Short.MAX_VALUE)
                                .addComponent(btn_open_file))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(85, 85, 85)
                        .addComponent(btn_open_alice_key, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(157, 157, 157)
                        .addComponent(bnt_open_bob_key, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(94, 94, 94))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txt_plaintext, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txt_key, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txt_ciphertext, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_open_alice_key)
                    .addComponent(bnt_open_bob_key))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 55, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_encrypt)
                    .addComponent(btn_decrypt)
                    .addComponent(btn_save_to_file)
                    .addComponent(btn_open_file))
                .addGap(25, 25, 25))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_open_alice_keyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_open_alice_keyActionPerformed
        // TODO add your handling code here:
        try {
            BufferedReader br = null;
            String fileName = "src/week_04/A.txt";
            br = new BufferedReader (new FileReader (fileName));
            StringBuffer sb = new StringBuffer();
            JOptionPane.showMessageDialog(null, "File Opened Successfully.");
            char[] ca= new char[5];
            while (br.ready()) {
                int len = br.read(ca);
                sb.append(ca, 0, len);
            }
            br.close();
            String chuoi = sb.toString();
            txt_key.setText(chuoi);
        } catch (IOException ex) {
            Logger.getLogger(frm_DESCS.class.getName()).log (Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btn_open_alice_keyActionPerformed

    private void bnt_open_bob_keyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bnt_open_bob_keyActionPerformed
        // TODO add your handling code here:
        try {
            BufferedReader br = null;
            String fileName = "src/week_04/B.txt";
            br = new BufferedReader (new FileReader (fileName));
            StringBuffer sb = new StringBuffer();
            JOptionPane.showMessageDialog(null, "File Opened Successfully.");
            char[] ca= new char[5];
            while (br.ready()) {
                int len = br.read(ca);
                sb.append(ca, 0, len);
            }
            br.close();
            String chuoi = sb.toString();
            txt_key.setText (chuoi);
        } catch (IOException ex) {
            Logger.getLogger(frm_DESCS.class.getName()).log (Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_bnt_open_bob_keyActionPerformed

    private void btn_decryptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_decryptActionPerformed
        try {
            String ciphertext = txt_ciphertext.getText();
            String secretKey = txt_key.getText();
            String decryptedText = DESCipher.decrypt (ciphertext, secretKey);
            txt_plaintext.setText (decryptedText);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this,
                "Error" +e.getMessage(),  "Error" ,JOptionPane. ERROR_MESSAGE);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_btn_decryptActionPerformed

    private void btn_open_fileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_open_fileActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Open File containing Ciphertext");
        int userSelection = fileChooser.showOpenDialog(this);
        if (userSelection == JFileChooser.APPROVE_OPTION) {
            File fileToOpen = fileChooser.getSelectedFile();
            try (BufferedReader reader = new BufferedReader (new FileReader (fileToOpen))) {
                StringBuilder ciphertextBuilder = new StringBuilder();
                String line;
                while ((line = reader.readLine()) != null) {
                    ciphertextBuilder.append(line);
                }
                String ciphertext = ciphertextBuilder.toString().trim();
                txt_ciphertext.setText (ciphertext);
            } catch (IOException e) {
                JOptionPane.showMessageDialog(this,
                    "Error opening file: " + e.getMessage(), "Error",
                    JOptionPane. ERROR_MESSAGE);
            }
        }        // TODO add your handling code here:
    }//GEN-LAST:event_btn_open_fileActionPerformed

    private void btn_encryptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_encryptActionPerformed
        // TODO add your handling code here:
        try {
String plaintext = txt_plaintext.getText();
String secretKey = txt_key.getText();
String encryptedText = DESCipher.encrypt (plaintext, secretKey);
txt_ciphertext.setText (encryptedText);
} catch (Exception e) {
JOptionPane.showMessageDialog(this,
"Error: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
}
    }//GEN-LAST:event_btn_encryptActionPerformed

    private void btn_save_to_fileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_save_to_fileActionPerformed
        // TODO add your handling code here:
        String ciphertext = txt_ciphertext.getText();
JFileChooser fileChooser = new JFileChooser();
fileChooser.setDialogTitle ("Save Ciphertext to File");
int userSelection = fileChooser.showSaveDialog(this);
if ( userSelection == JFileChooser.APPROVE_OPTION) {
File fileToSave = fileChooser.getSelectedFile();
try (FileWriter writer =
new FileWriter (fileToSave.getAbsolutePath() + ".txt")) {
writer.write (ciphertext);
JOptionPane.showMessageDialog(this,
"Ciphertext saved to file successfully.", "Success", JOptionPane. INFORMATION_MESSAGE);
} catch (IOException e) {
JOptionPane.showMessageDialog(this,
"Error saving file:"  + e.getMessage(), "Error",
JOptionPane.ERROR_MESSAGE);
}
}
    }//GEN-LAST:event_btn_save_to_fileActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frm_DESCS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frm_DESCS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frm_DESCS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frm_DESCS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frm_DESCS().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bnt_open_bob_key;
    private javax.swing.JButton btn_decrypt;
    private javax.swing.JButton btn_encrypt;
    private javax.swing.JButton btn_open_alice_key;
    private javax.swing.JButton btn_open_file;
    private javax.swing.JButton btn_save_to_file;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JTextField txt_ciphertext;
    private javax.swing.JTextField txt_key;
    private javax.swing.JTextField txt_plaintext;
    // End of variables declaration//GEN-END:variables
}
